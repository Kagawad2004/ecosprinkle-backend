# ============================================
# Ecosprinkle Backend - Environment Variables Template
# ============================================
# Copy this file to .env and fill in your actual values
# IMPORTANT: Never commit the .env file to GitHub!
# ============================================

# This template shows all required environment variables

## Required Environment Variables

### Database Configuration
```bash
MONGODB_URI=mongodb://localhost:27017/Ecosprinkle
```
MongoDB connection string. Default connects to local MongoDB instance.

### JWT Configuration
```bash
JWT_SECRET=your-super-secure-jwt-secret-key-here
JWT_REFRESH_SECRET=your-super-secure-refresh-token-secret-here
```
Secrets for JWT token generation. Use strong, random strings in production.

### Server Configuration
```bash
PORT=3002
```
Port for the main backend server. Default is 3002.

```bash
MQTT_PORT=1883
```
Port for the local MQTT broker. Default is 1883 (standard MQTT port).

### Google OAuth Configuration (Required for Google Login)
```bash
GOOGLE_CLIENT_ID=your-google-oauth-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-oauth-client-secret
GOOGLE_CALLBACK_URL=http://localhost:3002/api/auth/google/callback
```

#### How to Get Google OAuth Credentials:

1. Go to [Google Cloud Console](https://console.cloud.google.com/)
2. Create a new project or select existing one
3. Enable the Google+ API
4. Go to "Credentials" in the left sidebar
5. Click "Create Credentials" â†’ "OAuth 2.0 Client IDs"
6. Configure OAuth consent screen if prompted
7. Select "Web application" as application type
8. Add authorized redirect URIs:
   - `http://localhost:3002/api/auth/google/callback` (for development)
   - Your production domain + `/api/auth/google/callback`
9. Copy the Client ID and Client Secret

### Frontend Configuration
```bash
FRONTEND_URL=http://localhost:3000
```
URL of the frontend application for OAuth redirects.

## Optional Environment Variables

### MQTT Broker Configuration
```bash
MQTT_BROKER_URL=mqtt://localhost:1883
```
External MQTT broker URL if not using the built-in broker.

### Security Configuration
```bash
NODE_ENV=development
```
Environment mode. Set to 'production' in production.

```bash
BCRYPT_ROUNDS=12
```
Number of bcrypt rounds for password hashing. Default is 12.

## Sample .env File

Create a `.env` file in the backend directory:

```bash
# Database
MONGODB_URI=mongodb://localhost:27017/Ecosprinkle

# JWT Secrets (Generate random strings)
JWT_SECRET=your-jwt-secret-key-change-this-in-production
JWT_REFRESH_SECRET=your-refresh-token-secret-change-this-in-production

# Server Ports
PORT=3002
MQTT_PORT=1883

# Google OAuth (Get from Google Cloud Console)
GOOGLE_CLIENT_ID=your-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-client-secret
GOOGLE_CALLBACK_URL=http://localhost:3002/api/auth/google/callback

# Frontend URL
FRONTEND_URL=http://localhost:3000

# Environment
NODE_ENV=development
```

## Security Notes

- Never commit the `.env` file to version control
- Use different secrets for development and production
- Rotate JWT secrets periodically
- Use HTTPS in production for OAuth callbacks
- Store sensitive credentials securely (consider using Azure Key Vault or similar in production)

## Testing Environment Variables

To test if your environment variables are loaded correctly:

```bash
cd backend
node -e "console.log('JWT_SECRET:', process.env.JWT_SECRET ? 'Set' : 'Not set')"
node -e "console.log('GOOGLE_CLIENT_ID:', process.env.GOOGLE_CLIENT_ID ? 'Set' : 'Not set')"
```